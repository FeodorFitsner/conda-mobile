diff --git a/numpy/distutils/ccompiler.py b/patched/distutils/ccompiler.py
index 974e8f2..6ddbbde 100644
--- a/numpy/distutils/ccompiler.py
+++ b/patched/distutils/ccompiler.py
@@ -275,6 +275,7 @@ def CCompiler_compile(self, sources, output_dir=None, macros=None,
             self._setup_compile(output_dir, macros, include_dirs, sources,
                                 depends, extra_postargs)
     cc_args = self._get_cc_args(pp_opts, debug, extra_preargs)
+    cc_args += os.environ['CFLAGS'].split()
     display = "compile options: '%s'" % (' '.join(cc_args))
     if extra_postargs:
         display += "\nextra options: '%s'" % (' '.join(extra_postargs))
diff --git a/numpy/distutils/unixccompiler.py b/patched/distutils/unixccompiler.py
index 6ed5eec..2d688ad 100644
--- a/numpy/distutils/unixccompiler.py
+++ b/patched/distutils/unixccompiler.py
@@ -54,6 +54,7 @@ def UnixCCompiler__compile(self, obj, src, ext, cc_args, extra_postargs, pp_opts
         deps = []

     try:
+        self.linker_so = [os.environ['LD']+" "+os.environ['LDFLAGS']]
         self.spawn(self.compiler_so + cc_args + [src, '-o', obj] + deps +
                    extra_postargs, display = display)
     except DistutilsExecError:
@@ -110,6 +111,7 @@ def UnixCCompiler_create_static_lib(self, objects, output_libname,
         while tmp_objects:
             objects = tmp_objects[:50]
             tmp_objects = tmp_objects[50:]
+            self.archiver[0] = 'arm-linux-androideabi-ar'  #: The p4a recipe replaces this
             display = '%s: adding %d object files to %s' % (
                            os.path.basename(self.archiver[0]),
                            len(objects), output_filename)
diff --git a/numpy/core/code_generators/generate_umath.py b/patched/core/code_generators/generate_umath.py
index af058b4..88a498c 100644
--- a/numpy/core/code_generators/generate_umath.py
+++ b/patched/core/code_generators/generate_umath.py
@@ -974,6 +974,7 @@ def make_arrays(funcdict):
                 funclist.append('%s_%s' % (tname, name))
                 if t.simd is not None:
                     for vt in t.simd:
+                        continue #: __cpu_model seems to not exist on android
                         code2list.append("""\
 #ifdef HAVE_ATTRIBUTE_TARGET_{ISA}
 if (NPY_CPU_SUPPORTS_{ISA}) {{
