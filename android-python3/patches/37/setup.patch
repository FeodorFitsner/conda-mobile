diff --git a/setup.py b/setup.py
index 88cff61..b70a8b8 100644
--- a/setup.py
+++ b/setup.py
@@ -26,8 +26,8 @@ def set_compiler_flags(compiler_flags, compiler_py_flags_nodist):
     py_flags_nodist = sysconfig.get_config_var(compiler_py_flags_nodist)
     sysconfig.get_config_vars()[compiler_flags] = flags + ' ' + py_flags_nodist
 
-set_compiler_flags('CFLAGS', 'PY_CFLAGS_NODIST')
-set_compiler_flags('LDFLAGS', 'PY_LDFLAGS_NODIST')
+#set_compiler_flags('CFLAGS', 'PY_CFLAGS_NODIST')
+#set_compiler_flags('LDFLAGS', 'PY_LDFLAGS_NODIST')
 
 class Dummy:
     """Hack for parallel build"""
@@ -267,6 +267,7 @@ class PyBuildExt(build_ext):
             self.parallel = True
 
     def build_extensions(self):
+        return  # This is done the old school way with Setup.local
 
         # Detect which modules should be compiled
         missing = self.detect_modules()
@@ -307,10 +308,10 @@ class PyBuildExt(build_ext):
         mods_built = []
         mods_disabled = []
         for ext in self.extensions:
-            ext.sources = [ find_module_file(filename, moddirlist)
+            ext.sources = [ os.path.join('Modules', find_module_file(filename, moddirlist))
                             for filename in ext.sources ]
             if ext.depends is not None:
-                ext.depends = [find_module_file(filename, moddirlist)
+                ext.depends = [os.path.join('Modules', find_module_file(filename, moddirlist))
                                for filename in ext.depends]
             else:
                 ext.depends = []
@@ -590,7 +591,7 @@ class PyBuildExt(build_ext):
         # only change this for cross builds for 3.3, issues on Mageia
         if cross_compiling:
             self.add_gcc_paths()
-        self.add_multiarch_paths()
+        #self.add_multiarch_paths()
 
         # Add paths specified in the environment variables LDFLAGS and
         # CPPFLAGS for header and library files.
@@ -2398,8 +2399,7 @@ def main():
           # If you change the scripts installed here, you also need to
           # check the PyBuildScripts command above, and change the links
           # created by the bininstall target in Makefile.pre.in
-          scripts = ["Tools/scripts/pydoc3", "Tools/scripts/idle3",
-                     "Tools/scripts/2to3", "Tools/scripts/pyvenv"]
+          scripts = []
         )
 
 # --install-platlib
