diff --git a/pandas/_libs/sparse.pyx b/pandas/_libs/sparse.pyx
index fac678e..3474417 100644
--- a/pandas/_libs/sparse.pyx
+++ b/pandas/_libs/sparse.pyx
@@ -8,7 +8,7 @@ import numpy as np
 import operator
 import sys
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 # numpy versioning
 _np_version = np.version.short_version
diff --git a/pandas/_libs/src/reduce.pyx b/pandas/_libs/src/reduce.pyx
index f578eb2..0da2697 100644
--- a/pandas/_libs/src/reduce.pyx
+++ b/pandas/_libs/src/reduce.pyx
@@ -1,7 +1,7 @@
 #cython=False
 import numpy as np
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 is_numpy_prior_1_6_2 = LooseVersion(np.__version__) < '1.6.2'
 
diff --git a/pandas/compat/__init__.py b/pandas/compat/__init__.py
index 288d9d7..51a2dab 100644
--- a/pandas/compat/__init__.py
+++ b/pandas/compat/__init__.py
@@ -28,7 +28,8 @@ Other items:
 
 import functools
 import itertools
-from distutils.version import LooseVersion
+#from distutils.version import LooseVersion
+import re
 from itertools import product
 import sys
 import platform
@@ -44,6 +45,42 @@ PY35 = (sys.version_info >= (3, 5))
 PY36 = (sys.version_info >= (3, 6))
 PYPY = (platform.python_implementation() == 'PyPy')
 
+
+class LooseVersion:
+    component_re = re.compile(r'(\d+ | [a-z]+ | \.)', re.VERBOSE)
+
+    def __init__ (self, vstring=None):
+        if vstring:
+            self.parse(vstring)
+
+    def parse (self, vstring):
+        # I've given up on thinking I can reconstruct the version string
+        # from the parsed tuple -- so I just store the string here for
+        # use by __str__
+        self.vstring = vstring
+        components = list(filter(lambda x: x and x != '.',
+                            self.component_re.split(vstring)))
+        for i in range(len(components)):
+            try:
+                components[i] = int(components[i])
+            except ValueError:
+                pass
+
+        self.version = components
+
+    def __str__ (self):
+        return self.vstring
+
+    def __repr__ (self):
+        return "LooseVersion ('%s')" % str(self)
+
+    def __cmp__ (self, other):
+        if isinstance(other, types.StringType):
+            other = LooseVersion(other)
+
+        return cmp(self.version, other.version)
+
+
 try:
     import __builtin__ as builtins
     # not writeable when instantiated with string, doesn't handle unicode well
diff --git a/pandas/compat/numpy/__init__.py b/pandas/compat/numpy/__init__.py
index 5112957..73f532a 100644
--- a/pandas/compat/numpy/__init__.py
+++ b/pandas/compat/numpy/__init__.py
@@ -2,8 +2,7 @@
 
 import re
 import numpy as np
-from distutils.version import LooseVersion
-from pandas.compat import string_types, string_and_binary_types
+from pandas.compat import string_types, string_and_binary_types, LooseVersion
 
 
 # numpy versioning
diff --git a/pandas/compat/openpyxl_compat.py b/pandas/compat/openpyxl_compat.py
index 87cf52c..1849d04 100644
--- a/pandas/compat/openpyxl_compat.py
+++ b/pandas/compat/openpyxl_compat.py
@@ -4,7 +4,7 @@ Detect incompatible version of OpenPyXL
 GH7169
 """
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 start_ver = '1.6.1'
 stop_ver = '2.0.0'
diff --git a/pandas/core/computation/check.py b/pandas/core/computation/check.py
index bb8cc74..ef6749f 100644
--- a/pandas/core/computation/check.py
+++ b/pandas/core/computation/check.py
@@ -1,5 +1,5 @@
 import warnings
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 _NUMEXPR_INSTALLED = False
 _MIN_NUMEXPR_VERSION = "2.4.6"
diff --git a/pandas/core/missing.py b/pandas/core/missing.py
index 8a6a870..f89cafd 100644
--- a/pandas/core/missing.py
+++ b/pandas/core/missing.py
@@ -3,11 +3,10 @@ Routines for filling missing data
 """
 
 import numpy as np
-from distutils.version import LooseVersion
 
 from pandas._libs import algos, lib
 
-from pandas.compat import range, string_types
+from pandas.compat import range, string_types, LooseVersion
 from pandas.core.dtypes.common import (
     is_numeric_v_string_like,
     is_float_dtype,
diff --git a/pandas/core/nanops.py b/pandas/core/nanops.py
index d1a3550..713ddc7 100644
--- a/pandas/core/nanops.py
+++ b/pandas/core/nanops.py
@@ -2,7 +2,7 @@ import itertools
 import functools
 import operator
 import warnings
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 import numpy as np
 from pandas import compat
diff --git a/pandas/io/excel.py b/pandas/io/excel.py
index c8d0e42..2bc6e11 100644
--- a/pandas/io/excel.py
+++ b/pandas/io/excel.py
@@ -30,7 +30,7 @@ from pandas.io.formats.printing import pprint_thing
 import pandas.compat as compat
 import pandas.compat.openpyxl_compat as openpyxl_compat
 from warnings import warn
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 from pandas.util._decorators import Appender, deprecate_kwarg
 from textwrap import fill
 
diff --git a/pandas/io/feather_format.py b/pandas/io/feather_format.py
index b2bf4ab..d6ba52c 100644
--- a/pandas/io/feather_format.py
+++ b/pandas/io/feather_format.py
@@ -1,8 +1,7 @@
 """ feather-format compat """
 
-from distutils.version import LooseVersion
 from pandas import DataFrame, RangeIndex, Int64Index
-from pandas.compat import range
+from pandas.compat import range, LooseVersion
 from pandas.io.common import _stringify_path
 
 
diff --git a/pandas/io/formats/format.py b/pandas/io/formats/format.py
index bac5ac7..71cce3d 100644
--- a/pandas/io/formats/format.py
+++ b/pandas/io/formats/format.py
@@ -5,7 +5,7 @@ and latex files. This module also applies to display formatting.
 """
 
 from __future__ import print_function
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 # pylint: disable=W0141
 
 from textwrap import dedent
diff --git a/pandas/io/html.py b/pandas/io/html.py
index 6f98683..a3e1d7a 100644
--- a/pandas/io/html.py
+++ b/pandas/io/html.py
@@ -8,7 +8,7 @@ import re
 import numbers
 import collections
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 import numpy as np
 
diff --git a/pandas/io/parquet.py b/pandas/io/parquet.py
index eaaa14e..ab99120 100644
--- a/pandas/io/parquet.py
+++ b/pandas/io/parquet.py
@@ -1,9 +1,8 @@
 """ parquet compat """
 
 from warnings import catch_warnings
-from distutils.version import LooseVersion
 from pandas import DataFrame, RangeIndex, Int64Index, get_option
-from pandas.compat import string_types
+from pandas.compat import string_types, LooseVersion
 from pandas.core.common import AbstractMethodError
 from pandas.io.common import get_filepath_or_buffer
 
diff --git a/pandas/io/pytables.py b/pandas/io/pytables.py
index 2a1aaf2..1291317 100644
--- a/pandas/io/pytables.py
+++ b/pandas/io/pytables.py
@@ -49,7 +49,7 @@ from pandas.core.computation.pytables import Expr, maybe_expression
 from pandas._libs import algos, lib
 from pandas._libs.tslibs import timezones
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 # versioning attribute
 _version = '0.15.2'
diff --git a/pandas/io/sql.py b/pandas/io/sql.py
index a9b4f50..7bc0351 100644
--- a/pandas/io/sql.py
+++ b/pandas/io/sql.py
@@ -66,7 +66,7 @@ def _is_sqlalchemy_connectable(con):
             import sqlalchemy
             _SQLALCHEMY_INSTALLED = True
 
-            from distutils.version import LooseVersion
+            from pandas.compat import LooseVersion
             ver = LooseVersion(sqlalchemy.__version__)
             # For sqlalchemy versions < 0.8.2, the BIGINT type is recognized
             # for a sqlite engine, which results in a warning when trying to
diff --git a/pandas/plotting/_compat.py b/pandas/plotting/_compat.py
index d527bc0..a543b69 100644
--- a/pandas/plotting/_compat.py
+++ b/pandas/plotting/_compat.py
@@ -2,7 +2,7 @@
 # pylint: disable=E1101
 from __future__ import division
 
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 
 def _mpl_le_1_2_1():
diff --git a/pandas/plotting/_core.py b/pandas/plotting/_core.py
index e138095..6563fd7 100644
--- a/pandas/plotting/_core.py
+++ b/pandas/plotting/_core.py
@@ -5,7 +5,7 @@ from __future__ import division
 import warnings
 import re
 from collections import namedtuple
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 import numpy as np
 
diff --git a/pandas/util/testing.py b/pandas/util/testing.py
index b6fc9c7..15fce37 100644
--- a/pandas/util/testing.py
+++ b/pandas/util/testing.py
@@ -15,7 +15,7 @@ import traceback
 from datetime import datetime
 from functools import wraps, partial
 from contextlib import contextmanager
-from distutils.version import LooseVersion
+from pandas.compat import LooseVersion
 
 from numpy.random import randn, rand
 import numpy as np
