{% set name = "boto3" %}
{% set version = "1.6.9" %}
{% set hash_type = "sha256" %}
{% set hash_value = "0bbcba8ff9391e54ddb5d58289a1e0d7e58674ec2a5f16d7ae46676c8261405f" %}
package:
  name: pip-{{ name|lower }}
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  noarch: true
  script: 
  - export CC=/bin/false
  - export CXX=/bin/false
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm --install-lib=$PREFIX/android/arm/python/site-packages --install-scripts=$PREFIX/android/arm/scripts --install-data=$PREFIX/android/arm/data --install-headers=$PREFIX/android/arm/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm64 --install-lib=$PREFIX/android/arm64/python/site-packages --install-scripts=$PREFIX/android/arm64/scripts --install-data=$PREFIX/android/arm64/data --install-headers=$PREFIX/android/arm64/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86 --install-lib=$PREFIX/android/x86/python/site-packages --install-scripts=$PREFIX/android/x86/scripts --install-data=$PREFIX/android/x86/data --install-headers=$PREFIX/android/x86/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86_64 --install-lib=$PREFIX/android/x86_64/python/site-packages --install-scripts=$PREFIX/android/x86_64/scripts --install-data=$PREFIX/android/x86_64/data --install-headers=$PREFIX/android/x86_64/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphoneos --install-lib=$PREFIX/iphoneos/python/site-packages --install-scripts=$PREFIX/iphoneos/scripts --install-data=$PREFIX/iphoneos/data --install-headers=$PREFIX/iphoneos/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphonesimulator --install-lib=$PREFIX/iphonesimulator/python/site-packages --install-scripts=$PREFIX/iphonesimulator/scripts --install-data=$PREFIX/iphonesimulator/data --install-headers=$PREFIX/iphonesimulator/include
requirements:
  build:
  - pip-botocore >=1.9.9,<1.10.0
  - pip-jmespath >=0.7.1,<1.0.0
  - pip-s3transfer >=0.1.10,<0.2.0
  run:
  - pip-botocore >=1.9.9,<1.10.0
  - pip-jmespath >=0.7.1,<1.0.0
  - pip-s3transfer >=0.1.10,<0.2.0
about:
  home: https://github.com/boto/boto3
  license: Apache Software License
  license_family: APACHE
  license_file: ''
  summary: The AWS SDK for Python built for iOS and Android apps using enaml-native.
  description: "===============================\nBoto 3 - The AWS SDK for Python\n===============================\n\n|Build Status| |Docs| |Version| |Gitter|\n\nBoto3 is the Amazon Web Services (AWS) Software Development Kit (SDK) for\nPython, which allows Python developers to write software that makes use\nof services like Amazon S3 and Amazon EC2. You can find the latest, most\nup to date, documentation at `Read the Docs`_, including a list of\nservices that are supported. To see only those features which have been\nreleased, check out the `stable docs`_.\n\n\n.. _boto: https://docs.pythonboto.org/\n.. _`stable docs`: https://boto3.readthedocs.io/en/stable/\n.. _`Read the Docs`: https://boto3.readthedocs.io/en/latest/\n.. |Build Status| image:: http://img.shields.io/travis/boto/boto3/develop.svg?style=flat\n    :target: https://travis-ci.org/boto/boto3\n    :alt: Build Status\n.. |Gitter| image:: https://badges.gitter.im/boto/boto3.svg\n   :target: https://gitter.im/boto/boto3\n   :alt:\
    \ Gitter\n.. |Docs| image:: https://readthedocs.org/projects/boto3/badge/?version=latest&style=flat\n    :target: https://boto3.readthedocs.io/en/latest/\n    :alt: Read the docs\n.. |Downloads| image:: http://img.shields.io/pypi/dm/boto3.svg?style=flat\n    :target: https://pypi.python.org/pypi/boto3/\n    :alt: Downloads\n.. |Version| image:: http://img.shields.io/pypi/v/boto3.svg?style=flat\n    :target: https://pypi.python.org/pypi/boto3/\n    :alt: Version\n.. |License| image:: http://img.shields.io/pypi/l/boto3.svg?style=flat\n    :target: https://github.com/boto/boto3/blob/develop/LICENSE\n    :alt: License\n\nQuick Start\n-----------\nFirst, install the library and set a default region:\n\n.. code-block:: sh\n\n    $ pip install boto3\n\nNext, set up credentials (in e.g. ``~/.aws/credentials``):\n\n.. code-block:: ini\n\n    [default]\n    aws_access_key_id = YOUR_KEY\n    aws_secret_access_key = YOUR_SECRET\n\nThen, set up a default region (in e.g. ``~/.aws/config``):\n\n..\
    \ code-block:: ini\n\n    [default]\n    region=us-east-1\n\nThen, from a Python interpreter:\n\n.. code-block:: python\n\n    >>> import boto3\n    >>> s3 = boto3.resource('s3')\n    >>> for bucket in s3.buckets.all():\n            print(bucket.name)\n\nDevelopment\n-----------\n\nGetting Started\n~~~~~~~~~~~~~~~\nAssuming that you have Python and ``virtualenv`` installed, set up your\nenvironment and install the required dependencies like this instead of\nthe ``pip install boto3`` defined above:\n\n.. code-block:: sh\n\n    $ git clone https://github.com/boto/boto3.git\n    $ cd boto3\n    $ virtualenv venv\n    ...\n    $ . venv/bin/activate\n    $ pip install -r requirements.txt\n    $ pip install -e .\n\nRunning Tests\n~~~~~~~~~~~~~\nYou can run tests in all supported Python versions using ``tox``. By default,\nit will run all of the unit and functional tests, but you can also specify your own\n``nosetests`` options. Note that this requires that you have all supported\nversions\
    \ of Python installed, otherwise you must pass ``-e`` or run the\n``nosetests`` command directly:\n\n.. code-block:: sh\n\n    $ tox\n    $ tox -- unit/test_session.py\n    $ tox -e py26,py33 -- integration/\n\nYou can also run individual tests with your default Python version:\n\n.. code-block:: sh\n\n    $ nosetests tests/unit\n\nGenerating Documentation\n~~~~~~~~~~~~~~~~~~~~~~~~\nSphinx is used for documentation. You can generate HTML locally with the\nfollowing:\n\n.. code-block:: sh\n\n    $ pip install -r requirements-docs.txt\n    $ cd docs\n    $ make html\n\n\nGetting Help\n------------\n\nWe use GitHub issues for tracking bugs and feature requests and have limited\nbandwidth to address them. Please use these community resources for getting\nhelp:\n\n* Ask a question on `Stack Overflow <https://stackoverflow.com/>`__ and tag it with `boto3 <https://stackoverflow.com/questions/tagged/boto3>`__\n* Come join the AWS Python community chat on `gitter <https://gitter.im/boto/boto3>`__\n\
    * Open a support ticket with `AWS Support <https://console.aws.amazon.com/support/home#/>`__\n* If it turns out that you may have found a bug, please `open an issue <https://github.com/boto/boto3/issues/new>`__"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
