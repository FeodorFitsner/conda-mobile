{% set name = "txaio" %}
{% set version = "2.9.0" %}
{% set hash_type = "sha256" %}
{% set hash_value = "dfc3a7d04b4b484ae5ff241affab5bb01306b1e950dd6f54fd036cfca94345d0" %}
package:
  name: pip-{{ name|lower }}
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  noarch: true
  script: 
  - export CC=/bin/false
  - export CXX=/bin/false
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm --install-lib=$PREFIX/android/arm/python/site-packages --install-scripts=$PREFIX/android/arm/scripts --install-data=$PREFIX/android/arm/data --install-headers=$PREFIX/android/arm/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm64 --install-lib=$PREFIX/android/arm64/python/site-packages --install-scripts=$PREFIX/android/arm64/scripts --install-data=$PREFIX/android/arm64/data --install-headers=$PREFIX/android/arm64/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86 --install-lib=$PREFIX/android/x86/python/site-packages --install-scripts=$PREFIX/android/x86/scripts --install-data=$PREFIX/android/x86/data --install-headers=$PREFIX/android/x86/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86_64 --install-lib=$PREFIX/android/x86_64/python/site-packages --install-scripts=$PREFIX/android/x86_64/scripts --install-data=$PREFIX/android/x86_64/data --install-headers=$PREFIX/android/x86_64/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphoneos --install-lib=$PREFIX/iphoneos/python/site-packages --install-scripts=$PREFIX/iphoneos/scripts --install-data=$PREFIX/iphoneos/data --install-headers=$PREFIX/iphoneos/include
  - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphonesimulator --install-lib=$PREFIX/iphonesimulator/python/site-packages --install-scripts=$PREFIX/iphonesimulator/scripts --install-data=$PREFIX/iphonesimulator/data --install-headers=$PREFIX/iphonesimulator/include
requirements:
  build:
  - pip-six
  run:
  - pip-six
about:
  home: https://github.com/crossbario/txaio
  license: MIT License
  license_family: MIT
  license_file: ''
  summary: Compatibility API between asyncio/Twisted/Trollius. Built for Android and iOS apps using enaml-native.
  description: "txaio\n=====\n\n| |Version| |Build Status| |Coverage| |Docs|\n\n--------------\n\n**txaio** is a helper library for writing code that runs unmodified on\nboth `Twisted <https://twistedmatrix.com/>`_ and `asyncio <https://docs.python.org/3/library/asyncio.html>`_ / `Trollius <http://trollius.readthedocs.org/en/latest/index.html>`_.\n\nThis is like `six <http://pythonhosted.org/six/>`_, but for wrapping\nover differences between Twisted and asyncio so one can write code\nthat runs unmodified on both (aka *source code compatibility*). In\nother words: your *users* can choose if they want asyncio **or** Twisted\nas a dependency.\n\nNote that, with this approach, user code **runs under the native event\nloop of either Twisted or asyncio**. This is different from attaching\neither one's event loop to the other using some event loop adapter.\n\n\nPlatform support\n----------------\n\n**txaio** runs on CPython 2.7/3.3+ and PyPy 2/3, on top of Twisted or asyncio. Specifically, **txaio**\
    \ is tested on the following platforms:\n\n**Python 2:**\n\n* CPython 2.7 on Twisted 12.1, 13.2, 15.4, 16.5, trunk and on Trollius 2.0\n* PyPy 2 on Twisted 12.1, 13.2, 15.4, 16.5, trunk and on Trollius 2.0\n\n**Python 3:**\n\n* CPython 3.3 on Twisted 15.4, 16.5, trunk and on Trollius 2.0\n* CPython 3.4 on Twisted 15.4, 16.5, trunk and on asyncio (stdlib)\n* CPython 3.5 on Twisted 15.4, 16.5, trunk and on asyncio (stdlib)\n* CPython 3.6 on Twisted 15.4, 16.5, trunk and on asyncio (stdlib)\n* PyPy 3 on Twisted 15.4, 16.5, trunk and on asyncio (stdlib)\n\n\nHow it works\n------------\n\nInstead of directly importing, instantiating and using ``Deferred``\n(for Twisted) or ``Future`` (for asyncio) objects, **txaio** provides\nhelper-functions to do that for you, as well as associated things like\nadding callbacks or errbacks.\n\nThis obviously changes the style of your code, but then you can choose\nat runtime (or import time) which underlying event-loop to use. This\nmeans you can write\
    \ **one** code-base that can run on Twisted *or*\nasyncio (without a Twisted dependency) as you or your users see fit.\n\nCode like the following can then run on *either* system:\n\n.. sourcecode:: python\n\n    import txaio\n    txaio.use_twisted()  # or .use_asyncio()\n\n    f0 = txaio.create_future()\n    f1 = txaio.as_future(some_func, 1, 2, key='word')\n    txaio.add_callbacks(f0, callback, errback)\n    txaio.add_callbacks(f1, callback, errback)\n    # ...\n    txaio.resolve(f0, \"value\")\n    txaio.reject(f1, RuntimeError(\"it failed\"))\n\nPlease refer to the `documentation <https://txaio.readthedocs.io/en/latest/>`_ for description and usage of the library features.\n\n\n.. |Version| image:: https://img.shields.io/pypi/v/txaio.svg\n   :target: https://pypi.python.org/pypi/txaio\n\n.. |Build Status| image:: https://travis-ci.org/crossbario/txaio.svg?branch=master\n   :target: https://travis-ci.org/crossbario/txaio\n\n.. |Coverage| image:: https://codecov.io/github/crossbario/txaio/coverage.svg?branch=master\n\
    \   :target: https://codecov.io/github/crossbario/txaio\n\n.. |Docs| image:: https://readthedocs.org/projects/txaio/badge/?version=latest\n   :target: https://txaio.readthedocs.io/en/latest/\n\n\n"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''
