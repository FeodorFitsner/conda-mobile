language: python
os:
  - linux
  - osx
python:
  - 2.7
##  components:
##    - platform-tools
##    - tools
##    - android-27
before_install:
  - mkdir -p $HOME/Android/Sdk/licenses
  - echo -e "\n8933bad161af4178b1185d1a37fbf41ea5269c55" > "$ANDROID_HOME/licenses/android-sdk-license"
  - echo -e "\n84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"

install:
  - export ANDROID_HOME=$HOME/Android/Sdk/
  - export NDK=$HOME/Android/Sdk/ndk-bundle
  # We do this conditionally because it saves us some downloading if the
  # version is the same.
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
       wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
     else
       wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  # Useful for debugging any issues with conda
  - conda info -a
  # Install conda build
  - conda install conda-build -q

  # Install NDK
  - mkdir -p $ANDROID_HOME
  - cd $ANDROID_HOME
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -O tools.zip;
     else
      wget https://dl.google.com/android/repository/sdk-tools-darwin-3859397.zip -O tools.zip;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -O ndk-bundle.zip;
    else
      wget https://dl.google.com/android/repository/android-ndk-r16b-darwin-x86_64.zip -O ndk-bundle.zip;
    fi
  - unzip -oq tools.zip
  - unzip -oq ndk-bundle.zip
  - rm *.zip
  - tools/bin/sdkmanager --update
  - tools/bin/sdkmanager "platforms;android-27" "build-tools;27.0.3" "extras;google;m2repository" "extras;android;m2repository"
  - tools/bin/sdkmanager --licenses
  - cd $TRAVIS_BUILD_DIR

  # Create toolchains
  - python $NDK/build/tools/make_standalone_toolchain.py --arch x86_64 --api 26 --stl=libc++ --install-dir=$NDK/standalone/x86_64
  - python $NDK/build/tools/make_standalone_toolchain.py --arch x86 --api 26 --stl=libc++ --install-dir=$NDK/standalone/x86
  - python $NDK/build/tools/make_standalone_toolchain.py --arch arm --api 26 --stl=libc++ --install-dir=$NDK/standalone/arm
  - python $NDK/build/tools/make_standalone_toolchain.py --arch arm64 --api 26 --stl=libc++ --install-dir=$NDK/standalone/arm64


script:
  # Build ios recipes
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-libffi; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-openssl; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-python; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-atom; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-enaml; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; conda-build ios-msgpack; fi

  # Build android recipes
  - conda-build android-libffi
  - conda-build android-openssl
  - conda-build android-sqlite
  - conda-build android-python
  - conda-build android-atom
  - conda-build android-enaml
  - conda-build android-msgpack
