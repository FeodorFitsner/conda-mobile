language: generic
os:
  - linux
  - osx
osx_image: xcode9.2
install:
  - export ANDROID_HOME=$HOME/Android/Sdk/
  - export NDK=$HOME/Android/Sdk/ndk-bundle
  - export capture="tail -n 1000"

  # Install makeinfo via texinfo
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then sudo apt update -qq && sudo apt -qq install texinfo; fi

  # Install miniconda
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
       wget http://repo.continuum.io/miniconda/Miniconda2-latest-Linux-x86_64.sh -O miniconda.sh;
     else
       wget https://repo.continuum.io/miniconda/Miniconda2-latest-MacOSX-x86_64.sh -O miniconda.sh;
    fi
  - bash miniconda.sh -b -p $HOME/miniconda
  - export PATH="$HOME/miniconda/bin:$PATH"
  - hash -r
  - conda config --set always_yes yes --set changeps1 no
  - conda update -q conda
  - conda info -a
  # Install conda build and anaconda-client
  - conda install anaconda-client conda-build -q


  # Install NDK
  - mkdir -p $ANDROID_HOME
  - cd $ANDROID_HOME
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://dl.google.com/android/repository/sdk-tools-linux-3859397.zip -O tools.zip;
     else
      wget https://dl.google.com/android/repository/sdk-tools-darwin-3859397.zip -O tools.zip;
    fi
  - if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      wget https://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -O ndk-bundle.zip;
    else
      wget https://dl.google.com/android/repository/android-ndk-r16b-darwin-x86_64.zip -O ndk-bundle.zip;
    fi
  - unzip -oq tools.zip
  - unzip -oq ndk-bundle.zip
  - rm *.zip
  - find . | grep make_standalone_toolchain
  - mv android-ndk-r16b ndk-bundle

  # Install sdk and build tools
  - tools/bin/sdkmanager --update > output.log
  - echo yes | tools/bin/sdkmanager "platforms;android-27" > output.log
  - echo yes | tools/bin/sdkmanager "build-tools;27.0.3" > output.log
  - echo yes | tools/bin/sdkmanager "extras;google;m2repository" > output.log
  - echo yes | tools/bin/sdkmanager "extras;android;m2repository" > output.log
  - echo yes | tools/bin/sdkmanager --licenses > output.log
  - cd $TRAVIS_BUILD_DIR

  # Create toolchains
  - python $NDK/build/tools/make_standalone_toolchain.py --arch x86_64 --api 26 --stl=libc++ --install-dir=$NDK/standalone/x86_64
  - python $NDK/build/tools/make_standalone_toolchain.py --arch x86 --api 26 --stl=libc++ --install-dir=$NDK/standalone/x86
  - python $NDK/build/tools/make_standalone_toolchain.py --arch arm --api 26 --stl=libc++ --install-dir=$NDK/standalone/arm
  - python $NDK/build/tools/make_standalone_toolchain.py --arch arm64 --api 26 --stl=libc++ --install-dir=$NDK/standalone/arm64


script:
  # Pip (pure python) recipes
  - conda-build pip-future | $capture
  - conda-build pip-ply | $capture

  # Build ios recipes
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-libffi | $capture; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-openssl | $capture; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-python | $capture; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-atom | $capture; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-enaml | $capture; fi
  - if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then conda-build ios-msgpack | $capture; fi

  # Build android recipes
  - conda-build android-libffi | $capture
  - conda-build android-openssl | $capture
  - conda-build android-sqlite | $capture
  - conda-build android-python | $capture
  - conda-build android-atom | $capture
  - conda-build android-enaml | $capture
  - conda-build android-msgpack | $capture
