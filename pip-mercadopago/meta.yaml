{% set name = "mercadopago" %}
{% set version = "0.3.4" %}
{% set file_ext = "tar.gz" %}
{% set hash_type = "sha256" %}
{% set hash_value = "fb494230d774099dabe27f9cf6a8e6a348653548a1f3b3f9a673a7ad362d4bf6" %}
package:
  name: pip-{{ name|lower }}
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.{{ file_ext }}'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.{{ file_ext }}
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  noarch: true
  script: 

  - export CC=/bin/false
  - export CXX=/bin/false
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm --install-lib=$PREFIX/android/arm/python/site-packages --install-scripts=$PREFIX/android/arm/scripts --install-data=$PREFIX/android/arm/data --install-headers=$PREFIX/android/arm/include
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm64 --install-lib=$PREFIX/android/arm64/python/site-packages --install-scripts=$PREFIX/android/arm64/scripts --install-data=$PREFIX/android/arm64/data --install-headers=$PREFIX/android/arm64/include
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86 --install-lib=$PREFIX/android/x86/python/site-packages --install-scripts=$PREFIX/android/x86/scripts --install-data=$PREFIX/android/x86/data --install-headers=$PREFIX/android/x86/include
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86_64 --install-lib=$PREFIX/android/x86_64/python/site-packages --install-scripts=$PREFIX/android/x86_64/scripts --install-data=$PREFIX/android/x86_64/data --install-headers=$PREFIX/android/x86_64/include
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphoneos --install-lib=$PREFIX/iphoneos/python/site-packages --install-scripts=$PREFIX/iphoneos/scripts --install-data=$PREFIX/iphoneos/data --install-headers=$PREFIX/iphoneos/include
  - python setup.py install --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphonesimulator --install-lib=$PREFIX/iphonesimulator/python/site-packages --install-scripts=$PREFIX/iphonesimulator/scripts --install-data=$PREFIX/iphonesimulator/data --install-headers=$PREFIX/iphonesimulator/include
requirements:
  host:
  - pip-requests >=2.4.3
  run:
  - pip-requests >=2.4.3
about:
  home: https://github.com/mercadopago/sdk-python
  license: UNKNOWN
  license_family: OTHER
  license_file: ''
  summary: Mercadopago SDK module for Payments integration Built for Android and iOS apps using enaml-native.
  description: "MercadoPago SDK module for Payments integration\n===============================================\n\n* `Install`_\n* `Basic checkout`_\n* `Customized checkout`_\n* `Generic methods`_\n\nInstall\n-------\n\nOn Python 2.x\n\n``pip install mercadopago``\n\nOn Python 3.x\n\n``pip3 install mercadopago``\n\nBasic checkout\n--------------\n\nConfigure your credentials\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Get your **CLIENT_ID** and **CLIENT_SECRET** in the following address:\n    - Argentina: `https://www.mercadopago.com/mla/herramientas/aplicaciones <https://www.mercadopago.com/mla/herramientas/aplicaciones>`_\n    - Brazil: `https://www.mercadopago.com/mlb/ferramentas/aplicacoes <https://www.mercadopago.com/mlb/ferramentas/aplicacoes>`_\n    - M\xE9xico: `https://www.mercadopago.com/mlm/herramientas/aplicaciones <https://www.mercadopago.com/mlm/herramientas/aplicaciones>`_\n    - Venezuela: `https://www.mercadopago.com/mlv/herramientas/aplicaciones <https://www.mercadopago.com/mlv/herramientas/aplicaciones>`_\n\
    \    - Colombia: `https://www.mercadopago.com/mco/herramientas/aplicaciones <https://www.mercadopago.com/mco/herramientas/aplicaciones>`_\n    - Chile: `https://www.mercadopago.com/mlc/herramientas/aplicaciones <https://www.mercadopago.com/mlc/herramientas/aplicaciones>`_\n\n::\n\n    import mercadopago\n    import json\n\n    mp = mercadopago.MP(\"CLIENT_ID\", \"CLIENT_SECRET\")\n\nPreferences\n~~~~~~~~~~~\n\nGet an existent Checkout preference\n***********************************\n\n::\n\n    def index(req, **kwargs):\n        preferenceResult = mp.get_preference(\"PREFERENCE_ID\")\n        \n        return json.dumps(preferenceResult, indent=4)\n\nCreate a Checkout preference\n****************************\n\n::\n\n    def index(req, **kwargs):\n        preference = {\n            \"items\": [\n                {\n                    \"title\": \"Test\",\n                    \"quantity\": 1,\n                    \"currency_id\": \"USD\",\n                    \"unit_price\": 10.4\n \
    \               }\n            ]\n        }\n\n        preferenceResult = mp.create_preference(preference)\n\n        return json.dumps(preferenceResult, indent=4)\n\nUpdate an existent Checkout preference\n**************************************\n\n::\n\n    def index(req, **kwargs):\n        preference = {\n                \"items\": [\n                    {\n                        \"title\": \"Test Modified\",\n                        \"quantity\": 1,\n                        \"currency_id\": \"USD\",\n                        \"unit_price\": 20.4\n                    }\n                ]\n            }\n        \n        preferenceResult = mp.update_preference(id, preference)\n        \n        return json.dumps(preferenceResult, indent=4)\n\nPayments/Collections\n~~~~~~~~~~~~~~~~~~~~\n\nSearch for payments\n*******************\n\n::\n\n    def index(req, **kwargs):\n        filters = {\n            \"id\": None,\n            \"site_id\": None,\n            \"external_reference\"\
    : None\n        }\n\n        searchResult = mp.search_payment(filters)\n        \n        return json.dumps(searchResult, indent=4)\n\nGet payment data\n****************\n\n::\n\n    import mercadopago\n    import json\n\n    def index(req, **kwargs):\n        mp = mercadopago.MP(\"CLIENT_ID\", \"CLIENT_SECRET\")\n        paymentInfo = mp.get_payment (kwargs[\"id\"])\n        \n        if paymentInfo[\"status\"] == 200:\n            return json.dumps(paymentInfo, indent=4)\n        else:\n            return None\n\nCancel (only for pending payments)\n**********************************\n\n::\n\n    def index(req, **kwargs):\n        result = mp.cancel_payment(\"ID\")\n        \n        // Show result\n        return json.dumps(result, indent=4)\n\n\nRefund (only for accredited payments)\n*************************************\n\n::\n\n    def index(req, **kwargs):\n        result = mp.refund_payment(\"ID\")\n        \n        // Show result\n        return json.dumps(result, indent=4)\n\
    \nCustomized checkout\n-------------------\n\n\nConfigure your credentials\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n* Get your **ACCESS_TOKEN** in the following address:\n    * Argentina: `https://www.mercadopago.com/mla/account/credentials <https://www.mercadopago.com/mla/account/credentials>`_\n    * Brazil: `https://www.mercadopago.com/mlb/account/credentials <https://www.mercadopago.com/mlb/account/credentials>`_\n    * Mexico: `https://www.mercadopago.com/mlm/account/credentials <https://www.mercadopago.com/mlm/account/credentials>`_\n    * Venezuela: `https://www.mercadopago.com/mlv/account/credentials <https://www.mercadopago.com/mlv/account/credentials>`_\n    * Colombia: `https://www.mercadopago.com/mco/account/credentials <https://www.mercadopago.com/mco/account/credentials>`_\n\n::\n\n    import mercadopago\n    import json\n\n    mp = mercadopago.MP(\"ACCESS_TOKEN\")\n\nCreate payment\n~~~~~~~~~~~~~~\n\n::\n\n    mp.post (\"/v1/payments\", payment_data)\n\nCreate customer\n~~~~~~~~~~~~~~~\n\
    \n::\n\n    mp.post (\"/v1/customers\", {\"email\": \"email@test.com\"})\n\nGet customer\n~~~~~~~~~~~~\n\n::\n\n    mp.get (\"/v1/customers/CUSTOMER_ID\")\n\n* View more Custom checkout related APIs in Developers Site\n    * Argentina: `https://www.mercadopago.com.ar/developers <https://www.mercadopago.com.ar/developers>`_\n    * Brazil: `https://www.mercadopago.com.br/developers <https://www.mercadopago.com.br/developers>`_\n    * Mexico: `https://www.mercadopago.com.mx/developers <https://www.mercadopago.com.mx/developers>`_\n    * Venezuela: `https://www.mercadopago.com.ve/developers <https://www.mercadopago.com.ve/developers>`_\n    * Colombia: `https://www.mercadopago.com.co/developers <https://www.mercadopago.com.co/developers>`_\n\nGeneric methods\n---------------\n\nYou can access any other resource from the MercadoPago API using the generic methods:\n\n::\n\n    // Get a resource, with optional URL params. Also you can disable authentication for public APIs\n    mp.get (\"/resource/uri\"\
    , [params], [authenticate=true]);\n\n    // Create a resource with \"data\" and optional URL params.\n    mp.post (\"/resource/uri\", data, [params]);\n\n    // Update a resource with \"data\" and optional URL params.\n    mp.put (\"/resource/uri\", data, [params]);\n\n    // Delete a resource with optional URL params.\n    mp.delete (\"/resource/uri\", [params]);\n\nFor example, if you want to get the Sites list (no params and no authentication):\n\n::\n\n    result = mp.get (\"/sites\", null, false);\n\n    print (json.dumps(result, indent=4))\n\nRunning tests\n-------------\n\nOn Python 2.x\n\n``python setup.py test``\n\nOn Python 3.x\n\n``python3 setup.py test``"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: 'https://github.com/rodgomesc'
