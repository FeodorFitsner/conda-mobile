context:
  name: backports_abc
  version: '0.5'
  hash_type: sha256
  hash_value: 033be54514a03e255df75c5aee8f9e672f663f93abb723444caec8fe43437bde

package:
  name: pip-{{ name|lower }}
  version: '{{ version }}'

source:
  fn: '{{ name }}-{{ version }}.tar.gz'
  url: https://pypi.io/packages/source/{{ name[0] }}/{{ name }}/{{ name }}-{{ version }}.tar.gz
  '{{ hash_type }}': '{{ hash_value }}'

build:
  number: 0
  noarch: true
  script:
    - export CC=/bin/false
    - export CXX=/bin/false
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm --install-lib=$PREFIX/android/arm/python/site-packages --install-scripts=$PREFIX/android/arm/scripts --install-data=$PREFIX/android/arm/data --install-headers=$PREFIX/android/arm/include
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/arm64 --install-lib=$PREFIX/android/arm64/python/site-packages --install-scripts=$PREFIX/android/arm64/scripts --install-data=$PREFIX/android/arm64/data --install-headers=$PREFIX/android/arm64/include
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86 --install-lib=$PREFIX/android/x86/python/site-packages --install-scripts=$PREFIX/android/x86/scripts --install-data=$PREFIX/android/x86/data --install-headers=$PREFIX/android/x86/include
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/android/x86_64 --install-lib=$PREFIX/android/x86_64/python/site-packages --install-scripts=$PREFIX/android/x86_64/scripts --install-data=$PREFIX/android/x86_64/data --install-headers=$PREFIX/android/x86_64/include
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphoneos --install-lib=$PREFIX/iphoneos/python/site-packages --install-scripts=$PREFIX/iphoneos/scripts --install-data=$PREFIX/iphoneos/data --install-headers=$PREFIX/iphoneos/include
    - python setup.py install  --single-version-externally-managed --record=record.txt --no-compile --install-base=$PREFIX/iphonesimulator --install-lib=$PREFIX/iphonesimulator/python/site-packages --install-scripts=$PREFIX/iphonesimulator/scripts --install-data=$PREFIX/iphonesimulator/data --install-headers=$PREFIX/iphonesimulator/include
requirements: {}
about:
  home: https://github.com/cython/backports_abc
  license: Python Software Foundation License
  license_family: OTHER
  license_file: ''
  summary: A backport of recent additions to the 'collections.abc' module. Built for iOS and Android apps using enaml-native.
  description: "=============\nABC-Backports\n=============\n\nUsage:\n\n.. code-block:: python\n\n    try:\n        # ABCs live in \"collections.abc\" in Python >= 3.3\n        from collections.abc import Coroutine, Generator\n    except ImportError:\n        # fall back to import from \"backports_abc\"\n        from backports_abc import Coroutine, Generator\n\nYou can also install the ABCs into the stdlib by calling the ``patch()``\nfunction:\n\n.. code-block:: python\n\n    import backports_abc\n    backports_abc.patch()\n\n    try:\n        # ABCs live in \"collections.abc\" in Python >= 3.3\n        from collections.abc import Coroutine, Generator\n    except ImportError:\n        # fall back to import from \"collections\" in Python <= 3.2\n        from backports_abc import Coroutine, Generator\n\nCurrently, ``patch()`` provides the following names if missing:\n\n* ``collections.abc.Generator``\n* ``collections.abc.Awaitable``\n* ``collections.abc.Coroutine``\n* ``inspect.isawaitable(obj)``\n\
    \nAll of them are also available directly from the ``backports_abc``\nmodule namespace.\n\nIn Python 2.x and Python 3.2, it patches the ``collections`` module\ninstead of the ``collections.abc`` module.  Any names that are already\navailable when importing this module will not be overwritten.\n\nThe names that were previously patched by ``patch()`` can be queried\nthrough the mapping in ``backports_abc.PATCHED``.\n\nChangelog\n=========\n\n0.5 (2016-11-12)\n----------------\n\n* support old-style (mro-missing) classes\n\n0.4 (2015-09-14)\n----------------\n\n* direct wheel building support\n\n* make all names available at the module level instead of requiring patching\n\n\n0.3 (2015-07-03)\n----------------\n\n* removed patching of ``inspect.iscoroutine()`` as it is not ABC based\n\n\n0.2 (2015-07-03)\n----------------\n\n* require explicit ``backports_abc.patch()`` call to do the patching\n  (avoids side-effects on import and allows future configuration)\n\n* provide access to patched\
    \ names through global ``PATCHED`` dict\n\n* add ABC based implementations of inspect.iscoroutine() and\n  inspect.isawaitable()\n\n\n0.1 (2015-06-24)\n----------------\n\n* initial public release\n\n* provided ABCs: Generator, Coroutine, Awaitable"
  doc_url: ''
  dev_url: ''

extra:
  recipe-maintainers: ''

