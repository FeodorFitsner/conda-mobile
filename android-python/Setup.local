# Edit this file for local setup changes
# Uncommenting the following line tells makesetup that all following
# modules are to be built as shared libraries (see above for more
# detail; also note that *static* reverses this effect):

*shared*

# GNU readline.  Unlike previous Python incarnations, GNU readline is
# now incorporated in an optional module, configured in the Setup file
# instead of by a configure script switch.  You may have to insert a
# -L option pointing to the directory where libreadline.* lives,
# and you may have to change -ltermcap to -ltermlib or perhaps remove
# it, depending on your system -- see the GNU readline instructions.
# It's okay for this to be a shared library, too.

#readline readline.c -lreadline -ltermcap

# Modules that should always be present (non UNIX dependent):

# These say symbol duplicates if included
math mathmodule.c _math.c -lm # math library functions, e.g. sin()
time timemodule.c -lm # time operations and variables

array arraymodule.c	# array objects
cmath cmathmodule.c _math.c -lm # complex math library functions
_struct _struct.c	# binary structure packing/unpacking
operator operator.c	# operator.add() and similar goodies
#_testcapi _testcapimodule.c    # Python C API test module
_random _randommodule.c	# Random number generator
_collections _collectionsmodule.c # Container types
_heapq _heapqmodule.c		# Heapq type
itertools itertoolsmodule.c	# Functions creating iterators for efficient looping
strop stropmodule.c		# String manipulations
_functools _functoolsmodule.c	# Tools for working with functions and callable objects
#_pickle _pickle.c	# pickle accelerator
datetime datetimemodule.c timemodule.c -lm # date/time type
_bisect _bisectmodule.c	# Bisection algorithms
_json _json.c # json speedups
termios termios.c	# Steen Lumholt's termios module
_csv _csv.c # CSV file helper
mmap mmapmodule.c # Memory-mapped files (also works on Win32).
fcntl fcntlmodule.c	# fcntl(2) and ioctl(2)
#spwd spwdmodule.c		# spwd(3)
#grp grpmodule.c		# grp(3)
select selectmodule.c	# select(2); not on ancient System V
_socket socketmodule.c timemodule.c -lm # Socket module helper for socket(2)
binascii binascii.c # Helper module for various ascii-encoders
parser parsermodule.c # Fred Drake's interface to the Python parser
cStringIO cStringIO.c # cStringIO and cPickle
cPickle cPickle.c # cStringIO and cPickle
future_builtins future_builtins.c # Future backport
syslog syslogmodule.c # Lance Ellinghaus's syslog module

# profilers (_lsprof is for cProfile.py)
_hotshot _hotshot.c
_lsprof _lsprof.c rotatingtree.c

# Note that the _md5 and _sha modules are normally only built if the
# system does not have the OpenSSL libs containing an optimized version.

# The _md5 module implements the RSA Data Security, Inc. MD5
# Message-Digest Algorithm, described in RFC 1321.  The necessary files
# md5.c and md5.h are included here.
_md5 md5module.c md5.c

# The _sha module implements the SHA checksum algorithms.
# (NIST's Secure Hash Algorithms.)
_sha shamodule.c
_sha256 sha256module.c
_sha512 sha512module.c

# Anything below is built as shared
#*shared*

# Standard I/O baseline
_io -I$(srcdir)/Modules/_io _io/bufferedio.c _io/bytesio.c _io/fileio.c _io/iobase.c _io/_iomodule.c _io/stringio.c _io/textio.c

unicodedata unicodedata.c # static Unicode character database

# Socket module helper for SSL support; you must comment out the other
# socket line above, and possibly edit the SSL variable:
SSL=/usr/local/ssl # Replace build build.sh
_hashlib _hashopenssl.c -I$(SSL)/include -I$(SSL)/include/openssl \
                        	-L$(SSL)/lib -lssl -lcrypto
_ssl _ssl.c \
	-DUSE_SSL -I$(SSL)/include -I$(SSL)/include/openssl \
	-L$(SSL)/lib -lssl -lcrypto

# Andrew Kuchling's zlib module.
# This require zlib 1.1.3 (or later).
# See http://www.gzip.org/zlib/
zlib zlibmodule.c -I$(prefix)/include -L$(exec_prefix)/lib -lz

# Gustavo Niemeyer's bz2 module.
#bz2 bz2module.c -lbz2

# Interface to the Expat XML parser
#
# Expat was written by James Clark and is now maintained by a group of
# developers on SourceForge; see www.libexpat.org for more
# information.  The pyexpat module was written by Paul Prescod after a
# prototype by Jack Jansen.  Source of Expat 1.95.2 is included in
# Modules/expat/.  Usage of a system shared libexpat.so/expat.dll is
# not advised.
#
# More information on Expat can be found at www.libexpat.org.
#
_elementtree -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI _elementtree.c	# elementtree accelerator
pyexpat expat/xmlparse.c expat/xmlrole.c expat/xmltok.c pyexpat.c -I$(srcdir)/Modules/expat -DHAVE_EXPAT_CONFIG_H -DUSE_PYEXPAT_CAPI -DXML_POOR_ENTROPY

# Special inclusion for sqlite3
_sqlite3 -DSQLITE_OMIT_LOAD_EXTENSION _sqlite/cache.c _sqlite/microprotocols.c _sqlite/row.c _sqlite/connection.c _sqlite/module.c _sqlite/statement.c _sqlite/cursor.c _sqlite/prepare_protocol.c _sqlite/util.c -lsqlite3

# Multiprocessing
_multiprocessing -I$(srcdir)/Modules/_multiprocessing _multiprocessing/multiprocessing.c _multiprocessing/socket_connection.c _multiprocessing/semaphore.c

# Ctypes
_ctypes -I$(srcdir)/Modules/_ctypes _ctypes/_ctypes.c _ctypes/callbacks.c _ctypes/callproc.c _ctypes/stgdict.c _ctypes/cfield.c -lffi


# Hye-Shik Chang's CJKCodecs

# multibytecodec is required for all the other CJK codec modules
_multibytecodec cjkcodecs/multibytecodec.c
_codecs_kr cjkcodecs/_codecs_kr.c
_codecs_jp cjkcodecs/_codecs_jp.c
_codecs_cn cjkcodecs/_codecs_cn.c
_codecs_tw cjkcodecs/_codecs_tw.c
_codecs_hk cjkcodecs/_codecs_hk.c
_codecs_iso2022 cjkcodecs/_codecs_iso2022.c

# Must have newline at end
